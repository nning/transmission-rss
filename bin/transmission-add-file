#!/usr/bin/env ruby

require 'getoptlong'

$:.unshift(File.dirname(__FILE__) + '/../lib')
require 'transmission-rss'

include TransmissionRSS

# Default config file path.
config_file = '/etc/transmission-rss.conf'

# Shows a summary of the command line options.
def usage_message( config_file )
  $stderr << "#{File.basename($0)} [option].. [file]..
Adds torrent files to transmission web frontend.

  -c <file>   Custom config file path. Default: #{config_file}
  -h          This help.

"
  exit(1)
end

# Define command-line options.
options = GetoptLong.new(
  [ '-c', GetoptLong::REQUIRED_ARGUMENT ],
  [ '-h', GetoptLong::NO_ARGUMENT ]
)

# Parse given options.
options.each do |option, argument|
  case(option)
    when '-c'
      config_file = argument
    when '-h'
      usage_message(config_file)
  end
end

usage_message(config_file) if ARGV.empty?

# Seems to be necessary when called from gem installation.
# Otherwise Config is somehow mixed up with RbConfig.
config = TransmissionRSS::Config.instance

# Initialize a log instance and configure it.
log = Log.instance

# Load config file (default or given by argument).
begin
  config.load(config_file)
  log.target = config.log.target
  log.level  = config.log.level
rescue Errno::ENOENT
  log.error(config_file + ' not found')
end
log.debug(config)

# Initialize communication to transmission.
client = Client.new(config.server, config.login)

ARGV.each do |torrent_file|
  client.add_torrent(torrent_file, :file, add_paused: config.add_paused)
end

log.close
